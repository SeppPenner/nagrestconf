#!/bin/bash
# Use crontab to check, e.g.
#     * * * * * /usr/bin/update_nagios

PATH=$PATH:/usr/bin:/bin:/usr/sbin:/sbin
PIDFILE=/var/tmp/update_nagios.pid
ME="$0"

# Need proc in a chroot/container etc.
[[ -r /proc/self/fd ]] || {
    mount -t proc proc /proc
    [[ -r /proc/self/fd ]] || {
        echo "Could not mount /proc"
        exit 1
    }
}

# ---------------------------------------------------------------------------
quit()
# ---------------------------------------------------------------------------
{
    rm -f $PIDFILE
}

# ---------------------------------------------------------------------------
write_pid_or_exit()
# ---------------------------------------------------------------------------
{
    local me=`basename $ME`

    if test -e $PIDFILE; then
        pid=`cat $PIDFILE`
        # Stale pid?
        if ps ax | grep -qs "^$pid.*$me"; then
            exit 0
        fi
    fi

    echo "$$" >$PIDFILE
    trap quit EXIT
}

write_pid_or_exit

if [[ -r /etc/nagrestconf/nagctl.conf ]]; then
    source /etc/nagrestconf/nagctl.conf
else
    echo "/etc/nagrestconf/nagctl.conf not found."
    echo "Cannot start without NAG_OBJ_DIR variable."
    echo "Aborting."
    exit 1
fi

if [[ -r /etc/nagrestconf/restart_nagios.conf ]]; then
    source /etc/nagrestconf/restart_nagios.conf
else
    echo "/etc/nagrestconf/restart_nagios.conf not found."
    echo "Cannot start without NAG_INITD variable."
    echo "Aborting."
    exit 1
fi

UPDATE=0
for i in `ls /tmp/nagios_update_* 2>/dev/null` ; do
    rm $i
    basedir=$NAG_OBJ_DIR/${i##/tmp/nagios_update_}
    [[ -d $basedir/setup ]] && {
        cd $basedir/setup
        while read a b; do
            UPDATE=1
        done <<<"$( svn up | tail -n+2 )"
    }
    [[ $UPDATE -eq 1 ]] && {
        cd $basedir
        csv2nag -y all
        service $NAG_INITD restart
    }
done

